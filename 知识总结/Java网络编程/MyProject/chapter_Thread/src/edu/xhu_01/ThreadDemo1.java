package edu.xhu_01;
/*
 * 1、进程与线程
 * 进程：操作系统运行的单位
 * 线程：进程运行的单位，每个进程中至少一个线程，这个线程称为main线程，即执行main方法的线程
 *       在main线程中还可以开启其他的线程来执行多个任务。
 *       Java JVM在执行程序的时候，先启动一个main线程，执行程序中的main方法，main方法执行完成，该线程结束。
 *       但程序不一定结束，也许程序中还有其他线程没执行完毕，所有线程执行完毕后，整个程序运行结束。
 * 执行路径：一般程序在某一时刻只有一条执行路径，若在某一时刻需要多条执行路径，则需要使用多线程。
 * 实际应用中，若有多个用户请求，服务器需要处理每个用户的请求时，采用单线程，只有一个线程去抢夺CPU执行权，若用多个线程去抢夺CPU执行权，
 * 成功抢到执行权的机会会提高。
 * 2、Java提供多线程编程技术。基本方式有两种：
 * 第一种：创建一个类，继承Thread类，重写run()方法
 * 第二种：创建一个类，实现Runnable接口，实现run()方法
 */

//第一种方法：
public class ThreadDemo1 {
	public static void main(String[] args) {
		//第一步：创建线程类对象
		MyThread1 td1=new MyThread1();
		
		MyThread1 td2=new MyThread1();
		
		//第二步：调用start()方法，创建线程，并自动执行run()方法。若直接调用run()方法，则不开启线程，在当前线程中执行代码。
		//td1.run();  //同样可以执行代码，但不开启新线程。
		td1.setName("线程1");
		td2.setName("线程2");
		td1.start();
		td2.start();
		//哪个线程先执行？如何知道是并发运行？
	}

}
